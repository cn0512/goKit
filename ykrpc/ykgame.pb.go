// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ykgame.proto

/*
Package YKGameMsg is a generated protocol buffer package.

It is generated from these files:
	ykgame.proto

It has these top-level messages:
	LoginMsgReq
	LoginMsgRsp
	HeartBeatMsg
	ReadyGame
	StPlayer
	GameBegin
	GameEnd
	PlayMsg
	PlayErrMsg
*/
package YKGameMsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginMsgReq struct {
	Uid       uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Pwd       string `protobuf:"bytes,2,opt,name=Pwd" json:"Pwd,omitempty"`
	CheckCode string `protobuf:"bytes,3,opt,name=CheckCode" json:"CheckCode,omitempty"`
	Ret       uint32 `protobuf:"varint,4,opt,name=Ret" json:"Ret,omitempty"`
}

func (m *LoginMsgReq) Reset()                    { *m = LoginMsgReq{} }
func (m *LoginMsgReq) String() string            { return proto.CompactTextString(m) }
func (*LoginMsgReq) ProtoMessage()               {}
func (*LoginMsgReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginMsgReq) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *LoginMsgReq) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *LoginMsgReq) GetCheckCode() string {
	if m != nil {
		return m.CheckCode
	}
	return ""
}

func (m *LoginMsgReq) GetRet() uint32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

type LoginMsgRsp struct {
	Ret      uint32 `protobuf:"varint,1,opt,name=Ret" json:"Ret,omitempty"`
	NickName string `protobuf:"bytes,2,opt,name=NickName" json:"NickName,omitempty"`
}

func (m *LoginMsgRsp) Reset()                    { *m = LoginMsgRsp{} }
func (m *LoginMsgRsp) String() string            { return proto.CompactTextString(m) }
func (*LoginMsgRsp) ProtoMessage()               {}
func (*LoginMsgRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginMsgRsp) GetRet() uint32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *LoginMsgRsp) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

type HeartBeatMsg struct {
	HeartBeat bool `protobuf:"varint,1,opt,name=HeartBeat" json:"HeartBeat,omitempty"`
}

func (m *HeartBeatMsg) Reset()                    { *m = HeartBeatMsg{} }
func (m *HeartBeatMsg) String() string            { return proto.CompactTextString(m) }
func (*HeartBeatMsg) ProtoMessage()               {}
func (*HeartBeatMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *HeartBeatMsg) GetHeartBeat() bool {
	if m != nil {
		return m.HeartBeat
	}
	return false
}

type ReadyGame struct {
	Ready bool `protobuf:"varint,1,opt,name=Ready" json:"Ready,omitempty"`
}

func (m *ReadyGame) Reset()                    { *m = ReadyGame{} }
func (m *ReadyGame) String() string            { return proto.CompactTextString(m) }
func (*ReadyGame) ProtoMessage()               {}
func (*ReadyGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadyGame) GetReady() bool {
	if m != nil {
		return m.Ready
	}
	return false
}

type StPlayer struct {
	Seat  int32   `protobuf:"varint,1,opt,name=Seat" json:"Seat,omitempty"`
	Cards []int32 `protobuf:"varint,2,rep,packed,name=cards" json:"cards,omitempty"`
}

func (m *StPlayer) Reset()                    { *m = StPlayer{} }
func (m *StPlayer) String() string            { return proto.CompactTextString(m) }
func (*StPlayer) ProtoMessage()               {}
func (*StPlayer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StPlayer) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *StPlayer) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

type GameBegin struct {
	Seat    int32       `protobuf:"varint,1,opt,name=Seat" json:"Seat,omitempty"`
	Players []*StPlayer `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
}

func (m *GameBegin) Reset()                    { *m = GameBegin{} }
func (m *GameBegin) String() string            { return proto.CompactTextString(m) }
func (*GameBegin) ProtoMessage()               {}
func (*GameBegin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GameBegin) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *GameBegin) GetPlayers() []*StPlayer {
	if m != nil {
		return m.Players
	}
	return nil
}

type GameEnd struct {
	Winner  int32       `protobuf:"varint,1,opt,name=Winner" json:"Winner,omitempty"`
	Players []*StPlayer `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
}

func (m *GameEnd) Reset()                    { *m = GameEnd{} }
func (m *GameEnd) String() string            { return proto.CompactTextString(m) }
func (*GameEnd) ProtoMessage()               {}
func (*GameEnd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GameEnd) GetWinner() int32 {
	if m != nil {
		return m.Winner
	}
	return 0
}

func (m *GameEnd) GetPlayers() []*StPlayer {
	if m != nil {
		return m.Players
	}
	return nil
}

type PlayMsg struct {
	Players  *StPlayer `protobuf:"bytes,1,opt,name=Players" json:"Players,omitempty"`
	NextSeat int32     `protobuf:"varint,2,opt,name=NextSeat" json:"NextSeat,omitempty"`
	Ret      uint32    `protobuf:"varint,3,opt,name=Ret" json:"Ret,omitempty"`
}

func (m *PlayMsg) Reset()                    { *m = PlayMsg{} }
func (m *PlayMsg) String() string            { return proto.CompactTextString(m) }
func (*PlayMsg) ProtoMessage()               {}
func (*PlayMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PlayMsg) GetPlayers() *StPlayer {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *PlayMsg) GetNextSeat() int32 {
	if m != nil {
		return m.NextSeat
	}
	return 0
}

func (m *PlayMsg) GetRet() uint32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

type PlayErrMsg struct {
	Players *StPlayer `protobuf:"bytes,1,opt,name=Players" json:"Players,omitempty"`
	ErrCode int32     `protobuf:"varint,2,opt,name=ErrCode" json:"ErrCode,omitempty"`
}

func (m *PlayErrMsg) Reset()                    { *m = PlayErrMsg{} }
func (m *PlayErrMsg) String() string            { return proto.CompactTextString(m) }
func (*PlayErrMsg) ProtoMessage()               {}
func (*PlayErrMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PlayErrMsg) GetPlayers() *StPlayer {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *PlayErrMsg) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func init() {
	proto.RegisterType((*LoginMsgReq)(nil), "YKGameMsg.LoginMsgReq")
	proto.RegisterType((*LoginMsgRsp)(nil), "YKGameMsg.LoginMsgRsp")
	proto.RegisterType((*HeartBeatMsg)(nil), "YKGameMsg.HeartBeatMsg")
	proto.RegisterType((*ReadyGame)(nil), "YKGameMsg.ReadyGame")
	proto.RegisterType((*StPlayer)(nil), "YKGameMsg.StPlayer")
	proto.RegisterType((*GameBegin)(nil), "YKGameMsg.GameBegin")
	proto.RegisterType((*GameEnd)(nil), "YKGameMsg.gameEnd")
	proto.RegisterType((*PlayMsg)(nil), "YKGameMsg.playMsg")
	proto.RegisterType((*PlayErrMsg)(nil), "YKGameMsg.playErrMsg")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LoginRPC service

type LoginRPCClient interface {
	Login(ctx context.Context, in *LoginMsgReq, opts ...grpc.CallOption) (*LoginMsgRsp, error)
}

type loginRPCClient struct {
	cc *grpc.ClientConn
}

func NewLoginRPCClient(cc *grpc.ClientConn) LoginRPCClient {
	return &loginRPCClient{cc}
}

func (c *loginRPCClient) Login(ctx context.Context, in *LoginMsgReq, opts ...grpc.CallOption) (*LoginMsgRsp, error) {
	out := new(LoginMsgRsp)
	err := grpc.Invoke(ctx, "/YKGameMsg.LoginRPC/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LoginRPC service

type LoginRPCServer interface {
	Login(context.Context, *LoginMsgReq) (*LoginMsgRsp, error)
}

func RegisterLoginRPCServer(s *grpc.Server, srv LoginRPCServer) {
	s.RegisterService(&_LoginRPC_serviceDesc, srv)
}

func _LoginRPC_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginRPCServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/YKGameMsg.LoginRPC/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginRPCServer).Login(ctx, req.(*LoginMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoginRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "YKGameMsg.LoginRPC",
	HandlerType: (*LoginRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _LoginRPC_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ykgame.proto",
}

func init() { proto.RegisterFile("ykgame.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x4d, 0x4f, 0xf2, 0x40,
	0x10, 0x7e, 0x4b, 0x29, 0x6d, 0x07, 0xde, 0xc4, 0xac, 0x86, 0x34, 0xc4, 0x03, 0xee, 0x89, 0x83,
	0x70, 0x40, 0x2f, 0xc6, 0x1b, 0xa4, 0xd1, 0x44, 0x21, 0xcd, 0x12, 0x63, 0x3c, 0xae, 0x74, 0xac,
	0x0d, 0xd2, 0xd6, 0xed, 0x1a, 0xe5, 0xdf, 0x9b, 0xdd, 0x7e, 0xd0, 0x03, 0x1e, 0xf4, 0x36, 0xcf,
	0xe4, 0xf9, 0xd8, 0x9d, 0x19, 0xe8, 0xed, 0x36, 0x11, 0xdf, 0xe2, 0x24, 0x13, 0xa9, 0x4c, 0x89,
	0xfb, 0x74, 0x77, 0xc3, 0xb7, 0xb8, 0xc8, 0x23, 0xca, 0xa1, 0x7b, 0x9f, 0x46, 0x71, 0xb2, 0xc8,
	0x23, 0x86, 0xef, 0xe4, 0x08, 0xcc, 0x8f, 0x38, 0xf4, 0x8c, 0xa1, 0x31, 0xfa, 0xcf, 0x54, 0xa9,
	0x3a, 0xc1, 0x67, 0xe8, 0xb5, 0x86, 0xc6, 0xc8, 0x65, 0xaa, 0x24, 0xa7, 0xe0, 0xce, 0x5f, 0x71,
	0xbd, 0x99, 0xa7, 0x21, 0x7a, 0xa6, 0xee, 0xef, 0x1b, 0x8a, 0xcf, 0x50, 0x7a, 0xed, 0xc2, 0x81,
	0xa1, 0xa4, 0xd7, 0x8d, 0x88, 0x3c, 0xab, 0x08, 0x46, 0x4d, 0x20, 0x03, 0x70, 0x96, 0xf1, 0x7a,
	0xb3, 0xe4, 0x5b, 0x2c, 0x73, 0x6a, 0x4c, 0xcf, 0xa1, 0x77, 0x8b, 0x5c, 0xc8, 0x19, 0x72, 0xb9,
	0xc8, 0x23, 0x15, 0x5e, 0x63, 0xed, 0xe1, 0xb0, 0x7d, 0x83, 0x9e, 0x81, 0xcb, 0x90, 0x87, 0x3b,
	0xf5, 0x3b, 0x72, 0x02, 0x96, 0x06, 0x25, 0xad, 0x00, 0xf4, 0x12, 0x9c, 0x95, 0x0c, 0xde, 0xf8,
	0x0e, 0x05, 0x21, 0xd0, 0x5e, 0x55, 0x3e, 0x16, 0xd3, 0xb5, 0x52, 0xad, 0xb9, 0x08, 0x73, 0xaf,
	0x35, 0x34, 0x47, 0x16, 0x2b, 0x00, 0x5d, 0x82, 0xab, 0x3c, 0x67, 0x18, 0xc5, 0xc9, 0x41, 0xd9,
	0x18, 0xec, 0x4c, 0x9b, 0x16, 0xc2, 0xee, 0xf4, 0x78, 0x52, 0x0f, 0x79, 0x52, 0x05, 0xb2, 0x8a,
	0x43, 0x03, 0xb0, 0xd5, 0x3e, 0xfc, 0x24, 0x24, 0x7d, 0xe8, 0x3c, 0xc6, 0x49, 0x82, 0xa2, 0xf4,
	0x2b, 0xd1, 0x6f, 0x1d, 0x5f, 0x0a, 0xba, 0x9a, 0xd1, 0x18, 0xec, 0xa0, 0x54, 0x2a, 0xcb, 0x9f,
	0x94, 0x25, 0x47, 0x8f, 0x1f, 0xbf, 0xa4, 0xfe, 0x52, 0x4b, 0x3f, 0xa1, 0xc6, 0xd5, 0xb2, 0xcc,
	0xfd, 0x36, 0x1f, 0x00, 0x54, 0x8e, 0x2f, 0xc4, 0x1f, 0xa2, 0x3c, 0xb0, 0x7d, 0x21, 0xf4, 0xe1,
	0x14, 0x49, 0x15, 0x9c, 0xfa, 0xe0, 0xe8, 0x23, 0x61, 0xc1, 0x9c, 0x5c, 0x81, 0xa5, 0x6b, 0xd2,
	0x6f, 0x98, 0x35, 0xae, 0x74, 0x70, 0xb0, 0x9f, 0x67, 0xf4, 0xdf, 0x73, 0x47, 0x1f, 0xf8, 0xc5,
	0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x08, 0x4a, 0x57, 0x62, 0xf0, 0x02, 0x00, 0x00,
}
